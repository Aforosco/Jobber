@model Joberguy.Models.AllPostedJobsViewModel


<body>
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="text-primary"><i class="bi bi-briefcase"></i> Job Listings</h2>
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="PostJob" class="btn btn-success">
                    <i class="bi bi-plus-circle"></i> Create New Job
                </a>
            }
        </div>

        <div class="table-responsive shadow-lg p-3 bg-white rounded">
            <table class="table table-hover table-bordered align-middle">
                <thead class="table-dark text-center">
                    <tr>
                        <th>Job ID</th>
                        <th>Job Title</th>
                        @if (!User.IsInRole("Admin"))
                        {
                            <th>Description</th>
                            <th>Posted Date</th>
                            <th>Expires On</th>
                        }
                        <th>Location</th>
                        <th>Requirements</th>

                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Jobs)
                    {
                        <tr>
                            <td class="text-center">@item.Id</td>
                            <td>@item.JobTitle</td>
                            @if (!User.IsInRole("Admin"))
                            {
                                <td class="text-truncate">@item.JobDescription</td>
                                <td class="text-center">@item.PostDateTime.ToShortDateString()</td>
                                <td class="text-center">@item.expiringDate.ToShortDateString()</td>
                            }
                            <td>@item.JobLocation</td>
                            <td class="text-truncate">@item.JobRequirement</td>

                            <td class="text-center">
                                <a asp-action="GetJobById" asp-route-id="@item.Id" class="btn btn-info btn-sm text-white" title="View">
                                    <i class="bi bi-eye"></i>
                                    View
                                </a>

                                @if (User.IsInRole("Admin"))
                                {
                                    <a asp-action="EditPostedJob" asp-route-id="@item.Id" class="btn btn-warning btn-sm" title="Edit Job">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    <a asp-action="DeleteJob" asp-route-id="@item.Id" class="delete btn btn-danger btn-sm" title="Delete Job">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("GetAllPostedJobs", new { page = Model.CurrentPage - 1 })">Previous</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("GetAllPostedJobs", new { page = i })">@i</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("GetAllPostedJobs", new { page = Model.CurrentPage + 1 })">Next</a>
            </li>
        </ul>
    </nav>
</body>
<script>document.addEventListener('DOMContentLoaded', function () {
        // Select all delete buttons (assuming they have the class "delete")
        const deleteButtons = document.querySelectorAll('.delete');

        deleteButtons.forEach(function (button) {
            button.addEventListener('click', function (e) {
                e.preventDefault(); // Prevent default link behavior
                const deleteUrl = this.getAttribute('href');
                const row = this.closest('tr'); // Find the closest table row

                if (confirm("Are you sure you want to delete this item?")) {
                    fetch(deleteUrl, {
                        method: 'POST'
                    })
                        .then(function (response) {
                            if (!response.ok) {
                                throw new Error(response.statusText);
                            }
                            return response.text(); // or response.json(), depending on your API
                        })
                        .then(function (data) {
                            // Fade out the row using CSS transition
                            row.style.transition = "opacity 0.5s ease";
                            row.style.opacity = 0;
                            setTimeout(function () {
                                row.remove();
                            }, 500);

                            // Show success toast
                            Toastify({
                                text: "Job has been deleted successfully!",
                                duration: 3000,
                                close: true,
                                gravity: "bottom",
                                position: "right",
                                backgroundColor: "#28a745"
                            }).showToast();
                        })
                        .catch(function (error) {
                            // Show error toast if deletion fails
                            Toastify({
                                text: "Error deleting item: " + error.message,
                                duration: 3000,
                                close: true,
                                gravity: "top",
                                position: "right",
                                backgroundColor: "#dc3545"
                            }).showToast();
                        });
                }
            });
        });
    });</script>

